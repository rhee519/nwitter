{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","catch","code","signInWithEmailAndPassword","provider","GoogleAuthProvider","credential","EmailAuthProvider","credentialFromError","signInWithPopup","then","result","linkWithCredential","user","useEffect","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","credentialFromResult","console","log","GithubAuthProvider","icon","faTwitter","size","faGoogle","faGithub","Nweet","nweetObj","isOwner","edit","setEdit","text","content","setContent","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEdit","updateDoc","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","files","length","imgFile","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","current","faTimes","Home","nweets","setNweets","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","newPhotoURL","setNewPhotoURL","getMyNweets","q","where","getDocs","onDisplayNameSubmit","updateProfile","currentUser","onPhotoSubmit","photoURL","newPhotoRef","newPhotoUploadedUrl","width","height","autoFocus","signOut","push","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","substring","indexOf","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAgBAA,YAVuB,CAErBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAIF,IAAMM,EAAcC,cACdC,EAAYC,cACZC,EAAiBC,c,OCgGfC,EAvGE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAOLY,YACJxB,EACAQ,EACAE,GACAe,OAAM,SAACX,GACY,8BAAfA,EAAMY,MACRX,EAAS,4CAbF,6CAmBLY,YAA2B3B,EAAaQ,EAAOE,GAAUe,OAC7D,SAACX,GACC,GACiB,kDAAfA,EAAMY,KACN,CACA,IAAME,EAAW,IAAIC,IACfC,EAAaC,IAAkBC,oBAAoBlB,GACzDmB,YAAgBjC,EAAa4B,GAAUM,MAAK,SAACC,GAC3CC,YAAmBD,EAAOE,KAAMP,UA3B7B,yDAkCbf,EAAS,KAAMW,MAlCF,0DAAH,sDAqDd,OAVAY,qBAAU,WAER,OAAO,WACL7B,EAAS,IACTE,EAAY,IACZE,GAAc,GACdE,EAAS,OAEV,IAGD,qCACE,uBAAMM,SAAUA,EAAUkB,UAAU,YAApC,UACE,uBACEA,UAAU,YACVpB,KAAK,QACLqB,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRtB,MAAOZ,EACPQ,SAAUA,IAEZ,uBACEuB,UAAU,YACVpB,KAAK,WACLqB,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRtB,MAAOV,EACPM,SAAUA,IAEZ,uBACEuB,UAAU,uBACVC,KAAK,SACLpB,MAAOR,EAAa,iBAAmB,WAExCE,GAAS,sBAAMyB,UAAU,YAAhB,SAA6BzB,OAEzC,sBAAM6B,QA3CY,WACpB9B,GAAc,SAAC+B,GAAD,OAAWA,KACzB7B,EAAS,KAyCuBwB,UAAU,aAAxC,SACG3B,EAAa,UAAY,uB,gBCpCnBiC,EA1DF,WACX,IAAMC,EAAa,uCAAG,WAAO7B,GAAP,iBAAAK,EAAA,sDAERH,EACRF,EADFC,OAAUC,KAIZ,IACe,WAATA,GACFS,EAAW,IAAIC,IACfI,YAAgBjC,EAAa4B,GAC1BM,MAAK,SAACC,GACLN,IAAmBkB,qBAAqBZ,MAEzCV,OAAM,SAACX,GACNkC,QAAQC,IAAInC,OAEE,WAATK,IACTS,EAAW,IAAIsB,IACfjB,YAAgBjC,EAAa4B,GAC1BM,MAAK,SAACC,GAELe,IAAmBH,qBAAqBZ,MAEzCV,OAAM,SAACX,GACN,IAAMgB,EAAaoB,IAAmBlB,oBAAoBlB,GAEzC,kDAAfA,EAAMY,OAENE,EAAW,IAAIC,IACfI,YAAgBjC,EAAa4B,GAAUM,MAAK,SAACC,GAC3CC,YAAmBD,EAAOE,KAAMP,WAK1C,MAAOhB,GACPkC,QAAQC,IAAInC,GApCM,2CAAH,sDAwCnB,OACE,sBAAKyB,UAAU,gBAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,WAAWY,KAAMC,IAAWC,KAAK,OAC5D,cAAC,EAAD,IACA,sBAAKd,UAAU,WAAf,UACE,yBAAQpB,KAAK,SAASwB,QAASG,EAAeP,UAAU,UAAxD,iCAEE,cAAC,IAAD,CAAiBA,UAAU,eAAeY,KAAMG,SAElD,yBAAQnC,KAAK,SAASwB,QAASG,EAAeP,UAAU,UAAxD,iCAEE,cAAC,IAAD,CAAiBA,UAAU,eAAeY,KAAMI,gB,gBCO3CC,EApED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAAwBnD,oBAAS,GAAjC,mBAAOoD,EAAP,KAAaC,EAAb,KACA,EAA8BrD,mBAASkD,EAASI,MAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAa,uCAAG,sBAAA1C,EAAA,0DACT2C,OAAOC,QAAQ,+CADN,gCAIZC,YAAUC,YAAIlE,EAAD,iBAAsBuD,EAASY,MAJhC,WAKdZ,EAASa,cALK,gCAMVC,YAAaC,YAAIpE,EAAgBqD,EAASa,gBANhC,2CAAH,qDAUbG,EAAa,kBAAMb,GAAQ,SAAChB,GAAD,OAAWA,MAe5C,OACE,qBAAKL,UAAU,QAAf,SACGoB,GAAQD,EACP,qCACE,uBAAMrC,SAZG,SAACJ,GAChBA,EAAMM,iBACNmD,YAAUN,YAAIlE,EAAD,iBAAsBuD,EAASY,KAAO,CACjDR,KAAMC,IAERF,GAAQ,IAOwBrB,UAAU,sBAApC,UACE,uBACEnB,MAAO0C,EACPtB,KAAK,OACLC,YAAY,kBACZzB,SAvBY,SAACC,GACvB,IACYG,EACRH,EADFC,OAAUE,MAEZ2C,EAAW3C,IAoBDsB,UAAQ,IAEV,uBAAOH,UAAU,UAAUC,KAAK,SAASpB,MAAM,oBAEjD,sBAAMmB,UAAU,oBAAoBI,QAAS8B,EAA7C,uBAKF,qCACE,6BAAKhB,EAASI,OACbJ,EAASa,eACR,qBAAKK,IAAKlB,EAASa,cAAeM,IAAI,eAEvClB,GACC,sBAAKnB,UAAU,iBAAf,UACE,sBAAMI,QAASqB,EAAf,SACE,cAAC,IAAD,CAAiBb,KAAM0B,QAEzB,sBAAMlC,QAAS8B,EAAf,SACE,cAAC,IAAD,CAAiBtB,KAAM2B,iB,QCuCxBC,EAhGM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0BzE,mBAAS,IAAnC,mBAAO0E,EAAP,KAAcC,EAAd,KACA,EAAoC3E,mBAAS,IAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,mBAEZjE,EAAQ,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,yDACD,KAAV2D,EADW,oDAEfhE,EAAMM,iBACF+C,EAAgB,IAChBa,EAJW,wBAKPI,EAAgBf,YAAIpE,EAAD,UAAoB4E,EAAQQ,IAA5B,YAAmCC,gBAL/C,SAMPC,YAAaH,EAAeJ,EAAY,YANjC,wBAOSQ,YAAeJ,GAPxB,QAObjB,EAPa,0CAUPsB,YAAOC,YAAW3F,EAAW,UAAW,CAC5C2D,KAAMoB,EACNa,UAAWC,KAAKC,MAChBC,UAAWjB,EAAQQ,IACnBlB,kBAdW,2DAiBbtB,QAAQC,IAAR,MAjBa,QAmBfiC,EAAS,IACTE,EAAc,IApBC,2DAAH,sDAqDd,OALA9C,qBAAU,WAER4C,EAAS,IACTE,EAAc,MACb,IAED,uBAAM/D,SAAUA,EAAUkB,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVnB,MAAO6D,EACPzC,KAAK,OACLC,YAAY,uBACZyD,UAAW,IACXlF,SAvCS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZ8D,EAAS9D,MAqCL,uBAAOoB,KAAK,SAASpB,MAAM,SAASmB,UAAU,2BAEhD,wBAAO4D,QAAQ,cAAc5D,UAAU,sBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMiD,SAGzB,uBACE/B,GAAG,cACH7B,KAAK,OACLgC,IAAKa,EACLgB,OAAO,UACPrF,SA9Ce,SAACC,GACpB,IACYqF,EACRrF,EADFC,OAAUoF,MAEZ,GAAIA,EAAMC,OAAQ,CAChB,IAAMC,EAAUF,EAAM,GAChBG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClBxB,EAAcwB,EAAcC,cAAc1E,SAE5CsE,EAAOK,cAAcN,QAErBnB,EAAU0B,QAAQ3F,MAAQ,MAoCzB+D,GACC,sBAAK5C,UAAU,0BAAf,UACE,qBAAKoC,IAAKQ,EAAYP,IAAI,eAC1B,sBAAKrC,UAAU,qBAAqBI,QAnClB,kBAAMyC,EAAc,KAmCtC,UACE,0CACA,cAAC,IAAD,CAAiBjC,KAAM6D,gBCrDpBC,EApCF,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QACd,EAA4BzE,mBAAS,IAArC,mBAAO2G,EAAP,KAAeC,EAAf,KAmBA,OAlBA7E,qBAAU,WAcR,OAZA8E,YACEC,YAAMxB,YAAW3F,EAAW,UAAWoH,YAAQ,YAAa,UAC5D,SAACC,GACC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACtD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAIuD,WAETR,EAAUK,MAKP,WACLL,EAAU,OAEX,IAED,sBAAK5E,UAAU,YAAf,UACE,cAAC,EAAD,CAAcyC,QAASA,IAEvB,qBAAKzC,UAAU,oBAAf,SACG2E,EAAOQ,KAAI,SAACzC,GAAD,OACV,cAAC,EAAD,CAEExB,SAAUwB,EACVvB,QAASuB,EAAMgB,YAAcjB,EAAQQ,KAFhCP,EAAMZ,aC+HRuD,EAvJC,SAAC,GAA8B,IAA5B5C,EAA2B,EAA3BA,QAAS6C,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA4CxH,mBAASyE,EAAQgD,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsC3H,mBAAS,IAA/C,mBAAO4H,EAAP,KAAoBC,EAApB,KAOMC,EAAW,uCAAG,8BAAA/G,EAAA,6DACZgH,EAAIjB,YACRxB,YAAW3F,EAAW,UACtBqI,YAAM,YAAa,KAAMvD,EAAQQ,KACjC8B,YAAQ,YAAa,SAJL,SAMGkB,YAAQF,GANX,OAMZpB,EANY,OAOlBlE,QAAQC,IAAIiE,EAAOO,KAAKC,KAAI,SAACtD,GAAD,OAASA,EAAIuD,WAPvB,2CAAH,qDASjBrF,qBAAU,WACR+F,MACC,IAEH,IAAMI,EAAmB,uCAAG,WAAOxH,GAAP,SAAAK,EAAA,yDAC1BL,EAAMM,kBACF0G,GAAkBjD,EAAQgD,cAAgBC,EAFpB,gCAGlBS,YAAc1I,EAAY2I,YAAa,CAC3CX,YAAaC,IACZ/F,MAAK,kBAAM2F,OALU,2CAAH,sDAgBnBxC,EAAYC,mBAmBZsD,EAAa,uCAAG,WAAO3H,GAAP,iBAAAK,EAAA,yDACpBL,EAAMM,kBACF4G,GAAenD,EAAQ6D,WAAaV,EAFpB,wBAIZW,EAActE,YAClBpE,EADqB,UAElB4E,EAAQQ,IAFU,oBAEKC,gBANV,SAQZC,YAAaoD,EAAaX,EAAa,YAR3B,uBASgBxC,YAAemD,GAT/B,cASZC,EATY,iBAWZL,YAAc1I,EAAY2I,YAAa,CAC3CX,YAAahD,EAAQgD,YACrBa,SAAUE,IAET7G,MAAK,WACJ2F,IACAO,EAAe,IACf/C,EAAU0B,QAAQ3F,MAAQ,MAE3BK,OAAM,SAACX,GACNkC,QAAQC,IAAInC,MArBE,4CAAH,sDA8BnB,OACE,mCACE,sBAAKyB,UAAU,YAAf,UACE,uBAAMlB,SAAUoH,EAAqBlG,UAAU,cAA/C,UACE,qBACEA,UAAU,iBACVoC,IAAKK,EAAQ6D,SACbjE,IAAI,UACJoE,MAAM,OACNC,OAAO,SAET,uBACE1G,UAAU,YACVC,KAAK,OACL0G,WAAS,EACTzG,YAAY,eACZrB,MAAO6G,EACPjH,SAzEO,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZ8G,EAAkB9G,MAwEZ,uBAAOoB,KAAK,SAASpB,MAAM,cAAcmB,UAAU,eAErD,uBAAMlB,SAAUuH,EAAerG,UAAU,cAAzC,UACG4F,GACC,qCACE,qBACE5F,UAAU,iBACVoC,IAAKwD,EACLvD,IAAI,cACJoE,MAAM,OACNC,OAAO,SAET,qBAAK1G,UAAU,iBAAf,SACE,sBAAMI,QArCI,WACtByF,EAAe,KAoCH,SACE,cAAC,IAAD,CACE7F,UAAU,WACVY,KAAM6D,IACN3D,KAAK,cAMf,uBACEd,UAAU,YACVC,KAAK,OACL6D,OAAO,UACPrF,SA/FW,SAACC,GACpB+B,QAAQC,IAAI,eACZ,IACYqD,EACRrF,EADFC,OAAUoF,MAEZ,GAAIA,EAAMC,OAAQ,CAEhB,IAAMC,EAAUF,EAAM,GAChBG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClBwB,EAAexB,EAAcC,cAAc1E,SAE7CsE,EAAOK,cAAcN,KAoFfhC,IAAKa,IAEP,uBACE7C,KAAK,SACLpB,MAAM,uBACNmB,UAAU,eAGd,sBAAMA,UAAU,2BAA2BI,QA3I3B,WACpB3C,EAAYmJ,UACZrB,EAAQsB,KAAK,MAyIT,2BC9HOC,EArBI,SAAC,GAAD,IAAGrE,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAIzC,UAAU,gBAAd,UACE,6BACE,cAAC,IAAD,CAAMA,UAAU,YAAY+G,GAAG,IAA/B,SACE,cAAC,IAAD,CAAiB/G,UAAU,WAAWY,KAAMC,IAAWC,KAAK,WAGhE,6BACE,eAAC,IAAD,CAAMd,UAAU,eAAe+G,GAAG,WAAlC,UACE,cAAC,IAAD,CAAiB/G,UAAU,WAAWY,KAAMoG,IAAQlG,KAAK,OACzD,sBAAMd,UAAU,iBAAhB,SACGyC,EAAQgD,YAAR,UACMhD,EAAQgD,YADd,cAEG,uBCoBDwB,EA7BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYzE,EAA2B,EAA3BA,QAAS6C,EAAkB,EAAlBA,YACxC,OACE,eAAC,IAAD,WACG4B,GAAc,cAAC,EAAD,CAAYzE,QAASA,IACpC,cAAC,IAAD,UACGyE,EACC,mCACE,sBAAKlH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM3E,QAASA,EAAS6C,YAAaA,MAEvC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS3E,QAASA,EAAS6C,YAAaA,WAK9C,qCACE,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUC,KAAK,IAAIN,GAAG,e,MCwBnBO,MAnDf,WACE,MAAwBtJ,oBAAS,GAAjC,mBAAOuJ,EAAP,KAAaC,EAAb,KACA,EAA8BxJ,mBAAS,MAAvC,mBAAOyE,EAAP,KAAgBgF,EAAhB,KAiCA,OAtBA1H,qBAAU,WACRtC,EAAYiK,oBAAmB,SAAC5H,GAC1BA,GACGA,EAAK2F,aACRU,YAAcrG,EAAM,CAClB2F,YAAa3F,EAAK7B,MAAM0J,UAAU,EAAG7H,EAAK7B,MAAM2J,QAAQ,QAK5DH,EAAW,CACThC,YAAa3F,EAAK2F,YAClBa,SAAUxG,EAAKwG,SACfrD,IAAKnD,EAAKmD,IACVkD,cAAe,SAAC0B,GAAD,OAAU/H,EAAKqG,cAAc0B,OAG9CJ,EAAW,MAEbD,GAAQ,QAET,IAED,mCACGD,EACC,cAAC,EAAD,CACEL,WAAYY,QAAQrF,GACpBA,QAASA,EACT6C,YAtCY,WAClB,IAAMxF,EAAOrC,EAAY2I,YACzBqB,EAAW,CACThC,YAAa3F,EAAK2F,YAClBa,SAAUxG,EAAKwG,SACfrD,IAAKnD,EAAKmD,IACVkD,cAAe,SAAC0B,GAAD,OAAU/H,EAAKqG,cAAc0B,SAmC1C,qBC9CRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9f96013.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  // hide 'KEY' values for uploading to GITHUB\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  EmailAuthProvider,\n  GoogleAuthProvider,\n  linkWithCredential,\n  signInWithPopup,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // let data;\n      if (newAccount) {\n        // create account\n        // data = await createUserWithEmailAndPassword(authService, email, password);\n        await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        ).catch((error) => {\n          if (error.code === \"auth/email-already-in-use\") {\n            setError(\"This email address is already in use.\");\n          }\n        });\n      } else {\n        // log in\n        // data = await signInWithEmailAndPassword(authService, email, password);\n        await signInWithEmailAndPassword(authService, email, password).catch(\n          (error) => {\n            if (\n              error.code === \"auth/account-exists-with-different-credential\"\n            ) {\n              const provider = new GoogleAuthProvider();\n              const credential = EmailAuthProvider.credentialFromError(error);\n              signInWithPopup(authService, provider).then((result) => {\n                linkWithCredential(result.user, credential);\n              });\n            }\n          }\n        );\n      }\n    } catch (error) {\n      setError(error.code);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n    setError(\"\");\n  };\n\n  useEffect(() => {\n    // clean-up\n    return () => {\n      setEmail(\"\");\n      setPassword(\"\");\n      setNewAccount(false);\n      setError(\"\");\n    };\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  linkWithCredential,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { authService } from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n\n    try {\n      if (name === \"google\") {\n        provider = new GoogleAuthProvider();\n        signInWithPopup(authService, provider)\n          .then((result) => {\n            GoogleAuthProvider.credentialFromResult(result);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else if (name === \"github\") {\n        provider = new GithubAuthProvider();\n        signInWithPopup(authService, provider)\n          .then((result) => {\n            // setEmail(result.email);\n            GithubAuthProvider.credentialFromResult(result);\n          })\n          .catch((error) => {\n            const credential = GithubAuthProvider.credentialFromError(error);\n            if (\n              error.code === \"auth/account-exists-with-different-credential\"\n            ) {\n              provider = new GoogleAuthProvider();\n              signInWithPopup(authService, provider).then((result) => {\n                linkWithCredential(result.user, credential);\n              });\n            }\n          });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon className=\"authIcon\" icon={faTwitter} size=\"3x\" />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Google\n          <FontAwesomeIcon className=\"authFontIcon\" icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with GitHub\n          <FontAwesomeIcon className=\"authFontIcon\" icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"../fbase\";\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [edit, setEdit] = useState(false);\n  const [content, setContent] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      // delete nweet\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      if (nweetObj.attachmentUrl)\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n    }\n  };\n\n  const toggleEdit = () => setEdit((prev) => !prev);\n  const onContentChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setContent(value);\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: content,\n    });\n    setEdit(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {edit && isOwner ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              value={content}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              onChange={onContentChange}\n              required\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <span className=\"formBtn cancelBtn\" onClick={toggleEdit}>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"attachment\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEdit}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { useState, useRef, useEffect } from \"react\";\nimport { storageService, dbService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileInput = useRef();\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") return;\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment) {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      await uploadString(attachmentRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(attachmentRef);\n    }\n    try {\n      await addDoc(collection(dbService, \"nweets\"), {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    if (files.length) {\n      const imgFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        setAttachment(finishedEvent.currentTarget.result);\n      };\n      reader.readAsDataURL(imgFile);\n    } else {\n      fileInput.current.value = \"\";\n    }\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  useEffect(() => {\n    // clean-up\n    setNweet(\"\");\n    setAttachment(\"\");\n  }, []);\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        ref={fileInput}\n        accept=\"image/*\"\n        onChange={onFileChange}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} alt=\"attachment\" />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { onSnapshot, collection, query, orderBy } from \"firebase/firestore\";\n\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\nimport { dbService } from \"../fbase\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    // componentMount\n    onSnapshot(\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      }\n    );\n\n    // clean-up\n    return () => {\n      setNweets([]);\n    };\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n\n      <div className=\"nweets__container\">\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService, storageService } from \"../fbase\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [newPhotoURL, setNewPhotoURL] = useState(\"\");\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const q = query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    const nweets = await getDocs(q);\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onDisplayNameSubmit = async (event) => {\n    event.preventDefault();\n    if (newDisplayName && userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newDisplayName,\n      }).then(() => refreshUser());\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const fileInput = useRef();\n  const onFileChange = (event) => {\n    console.log(\"file change\");\n    const {\n      target: { files },\n    } = event;\n    if (files.length) {\n      // choose new photo\n      const imgFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        setNewPhotoURL(finishedEvent.currentTarget.result);\n      };\n      reader.readAsDataURL(imgFile);\n    } else {\n      // fileInput.current.value = \"\";\n    }\n  };\n\n  const onPhotoSubmit = async (event) => {\n    event.preventDefault();\n    if (newPhotoURL && userObj.photoURL !== newPhotoURL) {\n      // update profile\n      const newPhotoRef = ref(\n        storageService,\n        `${userObj.uid}/profile/${uuidv4()}`\n      );\n      await uploadString(newPhotoRef, newPhotoURL, \"data_url\");\n      const newPhotoUploadedUrl = await getDownloadURL(newPhotoRef);\n\n      await updateProfile(authService.currentUser, {\n        displayName: userObj.displayName,\n        photoURL: newPhotoUploadedUrl,\n      })\n        .then(() => {\n          refreshUser();\n          setNewPhotoURL(\"\");\n          fileInput.current.value = \"\";\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const onClearNewPhoto = () => {\n    setNewPhotoURL(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onDisplayNameSubmit} className=\"profileForm\">\n          <img\n            className=\"profile__photo\"\n            src={userObj.photoURL}\n            alt=\"profile\"\n            width=\"50px\"\n            height=\"50px\"\n          />\n          <input\n            className=\"formInput\"\n            type=\"text\"\n            autoFocus\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            onChange={onChange}\n          />\n\n          <input type=\"submit\" value=\"Update Name\" className=\"formBtn\" />\n        </form>\n        <form onSubmit={onPhotoSubmit} className=\"profileForm\">\n          {newPhotoURL && (\n            <>\n              <img\n                className=\"profile__photo\"\n                src={newPhotoURL}\n                alt=\"new profile\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n              <div className=\"profile__clear\">\n                <span onClick={onClearNewPhoto}>\n                  <FontAwesomeIcon\n                    className=\"clearBtn\"\n                    icon={faTimes}\n                    size=\"2x\"\n                  />\n                </span>\n              </div>\n            </>\n          )}\n          <input\n            className=\"formInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            ref={fileInput}\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile Image\"\n            className=\"formBtn\"\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n      </div>\n    </>\n  );\n};\nexport default Profile;\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n// import { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul className=\"nav-container\">\n      <li>\n        <Link className=\"link-home\" to=\"/\">\n          <FontAwesomeIcon className=\"nav-icon\" icon={faTwitter} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link className=\"link-profile\" to=\"/profile\">\n          <FontAwesomeIcon className=\"nav-icon\" icon={faUser} size=\"2x\" />\n          <span className=\"username__text\">\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div className=\"router__container\">\n              <Route exact path=\"/\">\n                <Home userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\nimport { updateProfile } from \"firebase/auth\";\nimport \"../styles.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (!user.displayName) {\n          updateProfile(user, {\n            displayName: user.email.substring(0, user.email.indexOf(\"@\")),\n            // e.g. email: rhee519@gmail.com\n            // displayName: rhee519\n          });\n        }\n        setUserObj({\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}